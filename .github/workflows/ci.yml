name: CI

on:
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:

  sanity-checks:
    runs-on: ubuntu-latest

    env:
      BLOB_STORAGE_URL: ${{ secrets.BLOB_STORAGE_URL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        id: build
        run: |
          docker build -t trace:${{ github.event.number }}  --build-arg BLOB_STORAGE_URL="${BLOB_STORAGE_URL}" .
          echo "::set-output name=image_tag::trace:${{ github.event.number }}"

      - name: Run Linter
        id: lint
        run: docker run ${{ steps.build.outputs.image_tag }} npm run lint

      - name: Run Tests
        id: test
        run: docker run ${{ steps.build.outputs.image_tag }} npm test
        if: false

  platform-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    env:
      BLOB_STORAGE_URL: ${{ secrets.BLOB_STORAGE_URL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.15'
          python-version: '3.11'
      - name: Display Node.js version
        run: |
          node --version

      - name: Display npm version
        run: |
          npm --version

      - name: Display Python version
        run: |
          python --version

      - name: Set up .env file
        run: echo "BLOB_STORAGE_URL='${BLOB_STORAGE_URL}'" > .env

      - name: Install application dependencies
        run: npm install

      - name: Install Azure CLI
        run: |
          if [ "$(uname)" = "Darwin" ]; then
            # Install Azure CLI on macOS
            brew update
            brew install azure-cli
          elif [ "$(expr substr $(uname -s) 1 5)" = "Linux" ]; then
            sudo apt-get install -y ca-certificates curl apt-transport-https lsb-release gnupg
            curl -sL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/microsoft.gpg > /dev/null
            AZ_REPO=$(lsb_release -cs)
            echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $AZ_REPO main" | sudo tee /etc/apt/sources.list.d/azure-cli.list
            sudo apt-get update
            sudo apt-get install azure-cli
          elif [ "$(expr substr $(uname -s) 1 10)" = "MINGW32_NT" ] || [ "$(expr substr $(uname -s) 1 10)" = "MINGW64_NT" ]; then
            # Install Azure CLI on Windows
            Invoke-WebRequest -Uri https://aka.ms/installazurecliwindows -OutFile AzureCLI.msi
            Start-Process msiexec.exe -Wait -ArgumentList '/I AzureCLI.msi /quiet'

      - name: Verify Azure CLI installation
        run: az version

      - name: Install Azurite for local development
        run: npm install -g azurite

      - name: Start Azurite Blob service
        run: azurite-blob -l ./azure-blob-storage &

      - name: Create Blob storage container using Azure CLI
        run: az storage container create --name turing-videos --connection-string "DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://127.0.0.1:10000/devstoreaccount1;"

      - name: Run linting
        run: npm run lint

      - name: Run build
        run: npm run build
